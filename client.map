{"version":3,"sources":["deparam.ts","client.ts"],"names":[],"mappings":";;;;AAAA,SAAA,OAAA,CAAwB,KAAxB,EAAqC;AACnC,QAAI,KAAJ;ACDF,ADEE,ICFF,IDEQ,OAAO,CCFf,IDEE,ICFF,WAAA,CAAA;AAGA,ADAE,ICAE,IDAI,KCAK,IDAI,KCAK,aAAtB,EDAE;ACCF,ADAE,ICAE,IDAI,OCAO,EDAE,OCAjB,EAA0B,ADAlB,MAAS,CAAC,CAAD,EAAU;ACGzB,ADH8B,aCGrB,EDHqB,OCGZ,YDH+B,CCGxC,CAAuB,ADHmB,OAAF,CAAU,IAAV,EAAgB,GAAhB,CAAnB,CAAA,0ECGrB,CAAT;AACD,ADJuE,KAAtE;ACOF,ADNE,ICMI,IDNE,ICMmC,EAA3C,GDN8C,EAA5C;ACOF,ADLE,KCKG,IAAI,EDLA,ECKI,CAAb,EAAgB,GDLC,CCKG,MDLI,CCKG,GDLV,CAAY,KAAZ,CCKG,ADLlB,CCKoC,CDLD,KCKrC,EAA8C,GAA9C,EAAmD;AACjD,ADLE,QCKI,ODLG,KCKS,EDLF,KCKS,CDLH,CAAN,CAAP,CAAP,IAA2B,ECKX,CAAkB,IAAlB,ADLkB,CCKK,CAAvB,CAAlB,GDL0C,CAAN,CAAP,CAA3B;ACMF,ADLC,UCKK,UAAU,IAAhB,IAAwB,UAAU,KAAlC;AACD,ADLC,WAAO,MAAP;ACQF,ADPC,MCOK,GAAN,GAAY,SAAS,IAArB;AACA,ADnBA,MCmBM,EDnBN,ICmBA,GAAe,ADnBf,GAAA,MCmBwB,CDnBxB,KCmBA;AACA,ADPA,MCOM,GDPN,KCOA,ADPA,CAAsB,ECOL,CDPjB,EAA8B,MCOJ,QAAT,CAAkB,MAAlB,CAAyB,CAAzB,EAA4B,OAA5B,CAAoC,QAApC,EAA8C,EAA9C,CAAjB;AACA,ADPE,MCOI,EDPE,GCOR,GAAc,EDPE,EAAd,KCOqB,KAAvB;AACA,ADPE,ICOI,KDPC,IAAM,IAAX,IAAmB,CCOG,EDPtB,EAAwB,KCOO,aAAT,CAAuB,0BAAvB,CAAxB;AACA,ADPI,MCOE,MDPE,IAAI,CCOZ,GAAoB,UDPZ,CAAmB,IAAnB,CAAJ,ECOkC,ADPJ,gBCOoB,OAAlC,GAA4C,EAAhE;AAKA,ADXM,SCWG,IAAT,CAAc,IDXF,IAAN,CAAc,SCWpB,CACE,SDZqC,GCWvC,CDXoB,CCalB,GDb0C,GAAxB,GAA4B,mBAAmB,IAAI,IAAJ,CAAnB,CAA1C,8PCWN;AAoBA,AD9BK,IC8BC,mBAAmB,OAAO,GAAP,CAAW,KAAX,CAAiB,+CAAjB,EAAmE,CAAnE,CAAzB;AACA,AD9BG,IC8BG,MAAS,mBAAgB,kBAA/B;AACA,AD9BE,OC8BK,ID9BE,MAAM,IAAN,CAAW,GC8BpB,AD9BS,CC+BP,AD/BA,UC8BF,EAEE,kHAC0E,GAD1E,GAC6E,GAD7E,GACiF,UAAA,KAAA,CAAM,KAAN,CADjF,GAC6F,wBAH/F;AAKA,ADlCC,ICkCK,YAAY,OAAO,kBAAzB;AACA,AD3CA,OC2CO,CD3CP,KAAA,GAAA,IC2CA,CAAsB,AD3CtB,WC2CA,CAAkC,MAAlC;AAGA,iBAAiB,SAAjB,EAA4B,UAAA,KAAA,EAAK;AAC/B,QAAI,MAAM,MAAN,KAAiB,gBAArB,EAAuC;AACrC;AACD;AACD,QAAM,OAAO,MAAM,IAAnB;AACA,QAAI,QAAQ,KAAK,IAAL,KAAc,QAAtB,IAAkC,KAAK,MAA3C,EAAmD;AACjD,kBAAU,KAAV,CAAgB,MAAhB,GAA4B,KAAK,MAAL,GAAW,IAAvC;AACD;AACF,CARD","file":"client.map","sourcesContent":["export function deparam(query: string): { [name: string]: string; } {\n  let match: RegExpExecArray | null;\n  const plus = /\\+/g;\n  const search = /([^&=]+)=?([^&]*)/g;\n  const decode = (s: string) => decodeURIComponent(s.replace(plus, ' '));\n  const params: { [name: string]: string; } = {};\n  // tslint:disable-next-line:no-conditional-assignment\n  while (match = search.exec(query)) {\n    params[decode(match[1])] = decode(match[2]);\n  }\n  return params;\n}\n\nexport function param(obj: any) {\n  const parts = [];\n  for (const name in obj) {\n    if (obj.hasOwnProperty(name)) {\n      parts.push(`${encodeURIComponent(name)}=${encodeURIComponent(obj[name])}`);\n    }\n  }\n  return parts.join('&');\n}\n","import { param } from './deparam';\nimport { ResizeMessage } from './bus';\n\nlet script = document.currentScript as HTMLScriptElement;\nif (script === undefined) {\n  // Internet Explorer :(\n  // tslint:disable-next-line:max-line-length\n  script = document.querySelector('script[src^=\"https://utteranc.es/client.js\"],script[src^=\"http://localhost:4000/client.js\"]') as HTMLScriptElement;\n}\n\n// gather script element's attributes\nconst attrs: { [name: string]: string; } = {};\nfor (let i = 0; i < script.attributes.length; i++) {\n  const attribute = script.attributes.item(i);\n  attrs[attribute.name] = attribute.value;\n}\n\n// gather page attributes\nattrs.url = location.href;\nattrs.origin = location.origin;\nattrs.pathname = location.pathname.substr(1).replace(/\\.\\w+$/, '');\nattrs.title = document.title;\nconst descriptionMeta = document.querySelector(`meta[name='description']`) as HTMLMetaElement;\nattrs.description = descriptionMeta ? descriptionMeta.content : '';\n\n// create the standard utterances styles and insert them at the beginning of the\n// <head> for easy overriding.\n// NOTE: the craziness with \"width\" is for mobile safari :(\ndocument.head.insertAdjacentHTML(\n  'afterbegin',\n  `<style>\n    .utterances {\n      position: relative;\n      width: 100%;\n    }\n    .utterances-frame {\n      position: absolute;\n      left: 0;\n      right: 0;\n      width: 1px;\n      min-width: 100%;\n      max-width: 100%;\n      height: 100%;\n      border: 0;\n    }\n  </style>`);\n\n// create the comments iframe and it's responsive container\nconst utterancesOrigin = script.src.match(/^https:\\/\\/utteranc.es|http:\\/\\/localhost:\\d+/)![0];\nconst url = `${utterancesOrigin}/utterances.html`;\nscript.insertAdjacentHTML(\n  'afterend',\n  `<div class=\"utterances\">\n    <iframe class=\"utterances-frame\" title=\"Comments\" scrolling=\"no\" src=\"${url}?${param(attrs)}\"></iframe>\n  </div>`);\nconst container = script.nextElementSibling as HTMLDivElement;\nscript.parentElement!.removeChild(script);\n\n// adjust the iframe's height when the height of it's content changes\naddEventListener('message', event => {\n  if (event.origin !== utterancesOrigin) {\n    return;\n  }\n  const data = event.data as ResizeMessage;\n  if (data && data.type === 'resize' && data.height) {\n    container.style.height = `${data.height}px`;\n  }\n});\n"]}