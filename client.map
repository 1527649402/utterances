{"version":3,"sources":["deparam.ts","client.ts"],"names":[],"mappings":";;;;AAAA,SAAA,OAAA,CAAwB,KAAxB,EAAqC;AACnC,QAAI,KAAJ;ACDF,ADEE,ICFF,IDEQ,OAAO,CCFf,IDEE,ICFF,WAAA,CAAA;AAGA,ADAE,ICAE,IDAI,KCAK,IDAI,KCAK,aAAtB,EDAE;ACCF,ADAE,ICAE,IDAI,OCAO,EDAE,OCAjB,EAA0B,ADAlB,MAAS,CAAC,CAAD,EAAU;ACEzB,ADF8B,aCErB,EDFqB,OCEZ,YDF+B,CCExC,CAAuB,ADFmB,OAAF,CAAU,IAAV,EAAgB,GAAhB,CAAnB,CAAA,2BCErB,CAAT;AACD,ADHuE,KAAtE;ACMF,ADLE,ICKI,IDLE,ICKmC,EAA3C,GDL8C,EAA5C;ACMF,ADJE,KCIG,IAAI,EDJA,ECII,CAAb,EAAgB,GDJC,CCIG,MDJI,CCIG,GDJV,CAAY,KAAZ,CCIG,ADJlB,CCIoC,CDJD,KCIrC,EAA8C,GAA9C,EAAmD;AACjD,ADJE,QCII,ODJG,KCIS,EDJF,KCIS,CDJH,CAAN,CAAP,CAAP,IAA2B,ECIX,CAAkB,IAAlB,ADJkB,CCIK,CAAvB,CAAlB,GDJ0C,CAAN,CAAP,CAA3B;ACKF,ADJC,UCIK,UAAU,IAAhB,IAAwB,UAAU,KAAlC;AACD,ADJC,WAAO,MAAP;ACOF,ADNC,MCMK,GAAN,GAAY,SAAS,IAArB;AACA,ADlBA,MCkBM,EDlBN,ICkBA,GAAe,ADlBf,GAAA,MCkBwB,CDlBxB,KCkBA;AACA,ADNA,MCMM,GDNN,KCMA,ADNA,CAAsB,ECML,CDNjB,EAA8B,MCMJ,QAAT,CAAkB,MAAlB,CAAyB,CAAzB,EAA4B,OAA5B,CAAoC,QAApC,EAA8C,EAA9C,CAAjB;AACA,ADNE,MCMI,EDNE,GCMR,GAAc,EDNE,EAAd,KCMqB,KAAvB;AACA,ADNE,ICMI,KDNC,IAAM,IAAX,IAAmB,CCMG,EDNtB,EAAwB,KCMO,aAAT,CAAuB,0BAAvB,CAAxB;AACA,ADNI,MCME,MDNE,IAAI,CCMZ,GAAoB,UDNZ,CAAmB,IAAnB,CAAJ,ECMkC,ADNJ,gBCMoB,OAAlC,GAA4C,EAAhE;AAKA,ADVM,SCUG,IAAT,CAAc,IDVF,IAAN,CAAc,SCUpB,CACE,SDXqC,GCUvC,CDVoB,CCYlB,GDZ0C,GAAxB,GAA4B,mBAAmB,IAAI,IAAJ,CAAnB,CAA1C,8PCUN;AAoBA,AD7BK,IC6BC,MAAM,OAAO,GAAP,CAAW,OAAX,CAAmB,gCAAnB,EAAqD,oBAArD,CAAZ;AACA,AD7BG,OC6BI,kBAAP,CACE,UADF,EAEE,+FACyD,GADzD,GAC4D,GAD5D,GACgE,UAAA,KAAA,CAAM,KAAN,CADhE,GAC4E,wBAH9E;AAKA,ADjCE,ICiCI,ODjCG,KCiCS,CDjCH,IAAN,CAAW,CCiCK,EDjChB,CAAP,eCiCF;AACA,ADjCC,OCiCM,aAAP,CAAsB,WAAtB,CAAkC,MAAlC;AAGA,AD5CA,QAAA,KAAA,GAAA,CC4CiB,ID5CjB,KC4CA,EAA4B,UAAA,KAAA,EAAK;AAC/B,QAAM,OAAO,MAAM,IAAnB;AACA,QAAI,QAAQ,KAAK,IAAL,KAAc,QAAtB,IAAkC,KAAK,MAA3C,EAAmD;AACjD,kBAAU,KAAV,CAAgB,MAAhB,GAA4B,KAAK,MAAL,GAAW,IAAvC;AACD;AACF,CALD","file":"client.map","sourcesContent":["export function deparam(query: string): { [name: string]: string; } {\n  let match: RegExpExecArray | null;\n  const plus = /\\+/g;\n  const search = /([^&=]+)=?([^&]*)/g;\n  const decode = (s: string) => decodeURIComponent(s.replace(plus, ' '));\n  const params: { [name: string]: string; } = {};\n  // tslint:disable-next-line:no-conditional-assignment\n  while (match = search.exec(query)) {\n    params[decode(match[1])] = decode(match[2]);\n  }\n  return params;\n}\n\nexport function param(obj: any) {\n  const parts = [];\n  for (const name in obj) {\n    if (obj.hasOwnProperty(name)) {\n      parts.push(`${encodeURIComponent(name)}=${encodeURIComponent(obj[name])}`);\n    }\n  }\n  return parts.join('&');\n}\n","import { param } from './deparam';\nimport { ResizeMessage } from './bus';\n\nlet script = document.currentScript as HTMLScriptElement;\nif (script === undefined) {\n  // Internet Explorer :(\n  script = document.querySelector('script[src^=\"https://utteranc.es/client.js\"]') as HTMLScriptElement;\n}\n\n// gather script element's attributes\nconst attrs: { [name: string]: string; } = {};\nfor (let i = 0; i < script.attributes.length; i++) {\n  const attribute = script.attributes.item(i);\n  attrs[attribute.name] = attribute.value;\n}\n\n// gather page attributes\nattrs.url = location.href;\nattrs.origin = location.origin;\nattrs.pathname = location.pathname.substr(1).replace(/\\.\\w+$/, '');\nattrs.title = document.title;\nconst descriptionMeta = document.querySelector(`meta[name='description']`) as HTMLMetaElement;\nattrs.description = descriptionMeta ? descriptionMeta.content : '';\n\n// create the standard utterances styles and insert them at the beginning of the\n// <head> for easy overriding.\n// NOTE: the craziness with \"width\" is for mobile safari :(\ndocument.head.insertAdjacentHTML(\n  'afterbegin',\n  `<style>\n    .utterances {\n      position: relative;\n      width: 100%;\n    }\n    .utterances-frame {\n      position: absolute;\n      left: 0;\n      right: 0;\n      width: 1px;\n      min-width: 100%;\n      max-width: 100%;\n      height: 100%;\n      border: 0;\n    }\n  </style>`);\n\n// create the comments iframe and it's responsive container\nconst url = script.src.replace(/\\/client(\\.debug)?\\.js(?:$|\\?)/, '/utterances$1.html');\nscript.insertAdjacentHTML(\n  'afterend',\n  `<div class=\"utterances\">\n    <iframe class=\"utterances-frame\" scrolling=\"no\" src=\"${url}?${param(attrs)}\"></iframe>\n  </div>`);\nconst container = script.nextElementSibling as HTMLDivElement;\nscript.parentElement!.removeChild(script);\n\n// adjust the iframe's height when the height of it's content changes\naddEventListener('message', event => {\n  const data = event.data as ResizeMessage;\n  if (data && data.type === 'resize' && data.height) {\n    container.style.height = `${data.height}px`;\n  }\n});\n"]}